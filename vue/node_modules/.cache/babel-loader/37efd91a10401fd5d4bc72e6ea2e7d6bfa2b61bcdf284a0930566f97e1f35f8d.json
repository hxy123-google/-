{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nexport default {\n  name: \"Collect\",\n  data() {\n    return {\n      categoryList: [],\n      current: '全部文献',\n      fromVisible: false,\n      menuVisible: false,\n      tableData: [],\n      // 所有的数据\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      form: {},\n      menu: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}')\n    };\n  },\n  mounted() {\n    this.loadleft();\n    //this.load(1);\n  },\n\n  methods: {\n    openAdd() {\n      this.menuVisible = true;\n    },\n    addMenu() {\n      this.$request.get(\"/menu/Addmenu\", {\n        params: {\n          userId: this.user.id,\n          name: this.menu.name\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('添加成功');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      console.log(this.startDate);\n      this.$request.get('/collection/selectPager', {\n        params: {\n          cId: this.user.id,\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          category: this.current === '全部文献' ? null : this.current\n        }\n      }).then(res => {\n        console.log(res);\n        for (var i = 0; i < res.data.list.length; i++) {\n          var dateTimeString = res.data.list[i].time;\n          var dateTime = new Date(dateTimeString);\n          var year = dateTime.getFullYear();\n          var month = dateTime.getMonth() + 1; // 注意：月份从 0 开始，所以要加 1\n          var day = dateTime.getDate();\n          res.data.list[i].time = year + '-' + (month < 10 ? '0' : '') + month + '-' + (day < 10 ? '0' : '') + day;\n        }\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    del(id) {\n      this.$request.get('/collection/delete', {\n        params: {\n          cId: this.user.id,\n          articleId: id\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('取消成功');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    handleRef(id) {\n      this.form.byId = id;\n      this.fromVisible = true;\n      //this.addReference();\n    },\n\n    addReference() {\n      this.$request.get('/bycited/add', {\n        params: {\n          byId: this.form.byId,\n          citeId: this.form.citeId,\n          userId: this.user.id\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('添加成功');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n      this.fromVisible = false;\n    },\n    selectCategory(categoryName) {\n      this.current = categoryName;\n      this.author = null, this.load(1);\n    },\n    loadleft() {\n      this.$request.get(\"/menu/selectAll\", {\n        params: {\n          userId: this.user.id\n        }\n      }).then(res => {\n        console.log(res);\n        this.categoryList = res.data;\n        this.categoryList.unshift({\n          name: '全部文献'\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","categoryList","current","fromVisible","menuVisible","tableData","pageNum","pageSize","total","form","menu","user","JSON","parse","localStorage","getItem","mounted","loadleft","methods","openAdd","addMenu","$request","get","params","userId","id","then","res","code","$message","success","error","msg","load","console","log","startDate","cId","category","i","list","length","dateTimeString","time","dateTime","Date","year","getFullYear","month","getMonth","day","getDate","del","articleId","handleRef","byId","addReference","citeId","selectCategory","categoryName","author","unshift"],"sources":["src/views/front/Collect.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n        <div style=\"display: flex; grid-gap:10px\">\r\n            <div style=\"width:150px\" class=\"card\">\r\n                <el-button plain type=\"danger\" size=\"mini\" @click=\"openAdd\">添加</el-button>\r\n                <!-- <div class=\"category-item\"  v-for=\"item in categoryList\" :key=\"item.id\">{{ item.category }}</div> -->\r\n                <div class=\"category-item\" :class=\"{ 'category-item-active': item.name === current }\"\r\n                    v-for=\"item in categoryList\" :key=\"item.id\" @click=\"selectCategory(item.category)\">{{ item.category\r\n                    }}</div>\r\n            </div>\r\n            <div style=\"flex:1\" class=\"card\">\r\n                <div class=\"table\">\r\n                    <el-table :data=\"tableData\">\r\n                        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n                        <el-table-column prop=\"img\" label=\"文献封面\" show-overflow-tooltip>\r\n                            <template v-slot=\"scope\">\r\n                                <div style=\"display: flex; align-items: center\">\r\n                                    <el-image style=\"width: 60px; height: 40px; border-radius: 10px\"\r\n                                        v-if=\"scope.row.img\" :src=\"scope.row.img\"\r\n                                        :preview-src-list=\"[scope.row.img]\"></el-image>\r\n                                </div>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"name\" label=\"文献名称\" show-overflow-tooltip width=\"300\">\r\n                            <template v-slot=\"scope\">\r\n                                <a :href=\"'/front/articleDetail?id=' + scope.row.id\">{{ scope.row.name }}</a>\r\n                            </template>\r\n                        </el-table-column>\r\n\r\n                        <el-table-column prop=\"author\" label=\"文献作者\" show-overflow-tooltip></el-table-column>\r\n                        <el-table-column prop=\"type\" label=\"文献类别\">\r\n                            <template v-slot=\"scope\">\r\n                                <span v-if=\"scope.row.type === 'CHINESE'\" style=\"color: #b67259\">中文 </span>\r\n                                <span v-else style=\"color: #448231\">英文</span>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"price\" label=\"所属积分\">\r\n                            <template v-slot=\"scope\">\r\n                                <span style=\"color: #12b127; font-size: 15px\" v-if=\"scope.row.price > 0\">{{\r\n                                    scope.row.price }} 积分</span>\r\n                                <span v-else style=\"color: green\">公开资料</span>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"discount\" label=\"文献折扣\">\r\n                            <template v-slot=\"scope\">\r\n                                <span style=\"color: #448231\" v-if=\"scope.row.discount < 1\">{{ scope.row.discount * 10 }}\r\n                                    折</span>\r\n                                <span style=\"color: #448231\" v-else>——</span>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"reference\" label=\"文献引用量\">\r\n                            <template v-slot=\"scope\">\r\n                                <a :href=\"'/front/refarticle?id=' + scope.row.id\">{{ scope.row.reference }}</a>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"time\" label=\"发表时间\"></el-table-column>\r\n                        <el-table-column label=\"引用\" width=\"180\" align=\"center\">\r\n                            <template v-slot=\"scope\">\r\n                                <el-button plain type=\"primary\" @click=\"handleRef(scope.row.id)\"\r\n                                    size=\"mini\">引用</el-button>\r\n                                <el-button plain type=\"danger\" size=\"mini\" @click=del(scope.row.id)>取消收藏</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n\r\n                    <div class=\"pagination\">\r\n                        <el-pagination background @current-change=\"handleCurrentChange\" :current-page=\"pageNum\"\r\n                            :page-sizes=\"[5, 10, 20]\" :page-size=\"pageSize\" layout=\"total, prev, pager, next\"\r\n                            :total=\"total\">\r\n                        </el-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <el-dialog title=\"文献引用\" :visible.sync=\"fromVisible\" width=\"55%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n            <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"form\" :rules=\"rules\" ref=\"formRef\">\r\n                <el-form-item prop=\"name\" label=\"引用文献id\">\r\n                    <el-input v-model=\"form.citeId\" autocomplete=\"off\" placeholder=\"请输入引用文献id\"></el-input>\r\n                </el-form-item>\r\n                <el-form-item label=\"被引用文献id\" prop=\"byId\">\r\n                    <el-input v-model=\"form.byId\" disabled></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addReference\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n        <el-dialog title=\"添加分类\" :visible.sync=\"menuVisible\" width=\"55%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n            <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"menu\" >\r\n                <el-form-item prop=\"name\" label=\"添加目录名\">\r\n                    <el-input v-model=\"menu.name\" autocomplete=\"off\" placeholder=\"请输入目录名称\"></el-input>\r\n                </el-form-item>\r\n            </el-form>\r\n            <div slot=\"footer\" class=\"dialog-footer\">\r\n                <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n                <el-button type=\"primary\" @click=\"addMenu\">确 定</el-button>\r\n            </div>\r\n        </el-dialog>\r\n    </div>\r\n\r\n\r\n\r\n</template>\r\n<script>\r\nexport default {\r\n    name: \"Collect\",\r\n    data() {\r\n        return {\r\n            categoryList: [],\r\n            current: '全部文献',\r\n            fromVisible: false,\r\n            menuVisible: false,\r\n            tableData: [],  // 所有的数据\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 10,  // 每页显示的个数\r\n            total: 0,\r\n            form: {},\r\n            menu:{},\r\n            user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n        }\r\n    },\r\n    mounted() {\r\n        this.loadleft();\r\n        //this.load(1);\r\n    },\r\n    methods: {\r\n        openAdd(){\r\n           this.menuVisible=true;\r\n        },\r\n        addMenu() {\r\n            this.$request.get(\"/menu/Addmenu\", {\r\n                params: {\r\n                    userId: this.user.id,\r\n                    name: this.menu.name\r\n                }\r\n            }).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success('添加成功')\r\n                }\r\n                else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n        },\r\n        load(pageNum) {\r\n            if (pageNum) this.pageNum = pageNum;\r\n            console.log(this.startDate);\r\n            this.$request.get('/collection/selectPager', {\r\n                params: {\r\n                    cId: this.user.id,\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                    category: this.current === '全部文献' ? null : this.current,\r\n                }\r\n            }).then(res => {\r\n                console.log(res);\r\n                for (var i = 0; i < res.data.list.length; i++) {\r\n\r\n                    var dateTimeString = res.data.list[i].time;\r\n                    var dateTime = new Date(dateTimeString);\r\n                    var year = dateTime.getFullYear();\r\n                    var month = dateTime.getMonth() + 1; // 注意：月份从 0 开始，所以要加 1\r\n                    var day = dateTime.getDate();\r\n                    res.data.list[i].time = year + '-' + (month < 10 ? '0' : '') + month + '-' + (day < 10 ? '0' : '') + day;\r\n                }\r\n                this.tableData = res.data?.list\r\n                this.total = res.data?.total\r\n            })\r\n        },\r\n        del(id) {\r\n            this.$request.get('/collection/delete', {\r\n                params: {\r\n                    cId: this.user.id,\r\n                    articleId: id\r\n                   \r\n                }\r\n            }).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success('取消成功')\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n\r\n        },\r\n        handleRef(id) {\r\n            this.form.byId = id;\r\n            this.fromVisible = true;\r\n            //this.addReference();\r\n        },\r\n        addReference() {\r\n            this.$request.get('/bycited/add', {\r\n                params: {\r\n                    byId: this.form.byId,\r\n                    citeId: this.form.citeId,\r\n                    userId: this.user.id\r\n                }\r\n            }).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success('添加成功')\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n            this.fromVisible = false;\r\n        },\r\n        selectCategory(categoryName) {\r\n            this.current = categoryName;\r\n            this.author = null,\r\n                this.load(1);\r\n        },\r\n        loadleft() {\r\n            this.$request.get(\"/menu/selectAll\", {\r\n                params: {\r\n                    userId: this.user.id\r\n                }\r\n            }).then(res => {\r\n                console.log(res);\r\n                this.categoryList = res.data;\r\n                this.categoryList.unshift({ name: '全部文献' })\r\n            })\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style>\r\n    .category-item {\r\n    text-align: center;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n}\r\n\r\n.category-item-active {\r\n    background-color: #1890ff;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n}\r\n\r\n.search {\r\n    display: flex;\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}