{"ast":null,"code":"import * as echarts from \"echarts\";\nlet barOptions = {\n  title: {\n    text: '',\n    // 主标题\n    subtext: '',\n    // 副标题\n    left: 'center'\n  },\n  xAxis: {\n    type: 'category',\n    data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\n  },\n\n  yAxis: {\n    type: 'value',\n    minInterval: 1\n  },\n  tooltip: {\n    trigger: 'item'\n  },\n  series: [{\n    data: [120, 200, 150, 80, 70, 110, 130],\n    // 示例数据：横坐标维度对应的值（纵坐标）\n    type: 'bar',\n    itemStyle: {\n      normal: {\n        color: function () {\n          return \"#\" + Math.floor(Math.random() * (256 * 256 * 256 - 1)).toString(16);\n        }\n      }\n    }\n  }]\n};\nexport default {\n  name: \"Professor\",\n  data() {\n    let authorId = this.$route.query.id;\n    return {\n      tableData: [],\n      // 所有的数据\n      pro: null,\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 8,\n      // 每页显示的个数\n      total: 0,\n      name: null,\n      journal: null,\n      author: null,\n      authorId: authorId,\n      menuVisible: null,\n      menu: {},\n      type: null,\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      pageNum1: 1,\n      // 当前的页码\n      pageSize1: 8,\n      total1: 0,\n      options: []\n    };\n  },\n  created() {\n    this.loadPro();\n    this.load(1);\n  },\n  mounted() {\n    this.loadBar();\n    //this.loadPro();\n    // this.load(1);\n    //this.loadBar();\n  },\n\n  methods: {\n    addMyMenu() {\n      console.log(this.menu.name);\n      this.$request.get('/Userarticle/add/', {\n        params: {\n          articleId: this.articleId,\n          cId: this.user.id,\n          name: this.menu.name\n        }\n      }).then(res => {\n        if (res.code === '200') {\n          this.$message.success('添加成功');\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n      this.menuVisible = false;\n    },\n    loadleftmenu() {\n      this.$request.get(\"/menu/selectAll\", {\n        params: {\n          userId: this.user.id\n        }\n      }).then(res => {\n        console.log(res);\n        this.categoryList = res.data;\n        this.options = res.data;\n        //this.categoryList.unshift({ name: '全部文献' })\n      });\n    },\n\n    col(id) {\n      this.menuVisible = true;\n      this.loadleftmenu();\n      this.articleId = id;\n    },\n    load(pageNum) {\n      if (pageNum) this.pageNum = pageNum;\n      console.log(this.startDate);\n      this.$request.get('/article/selectArticle', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          authorId: this.authorId\n        }\n      }).then(res => {\n        console.log(res);\n        for (var i = 0; i < res.data.list.length; i++) {\n          var dateTimeString = res.data.list[i].time;\n          var dateTime = new Date(dateTimeString);\n          var year = dateTime.getFullYear();\n          var month = dateTime.getMonth() + 1; // 注意：月份从 0 开始，所以要加 1\n          var day = dateTime.getDate();\n          res.data.list[i].time = year + '-' + (month < 10 ? '0' : '') + month + '-' + (day < 10 ? '0' : '') + day;\n        }\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n      //this.loadBar();\n    },\n\n    loadPro() {\n      this.$request.get('/user/selectById/' + this.authorId).then(res => {\n        if (res.code === '200') {\n          this.pro = res.data;\n          console.log(this.pro);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n    loadBar() {\n      this.$request.get('/bycited/getProBar', {\n        params: {\n          id: this.authorId\n        }\n      }).then(res => {\n        setTimeout(() => {\n          console.log(\"500毫秒后执行的操作\");\n        }, 1000); // 500毫秒\n        if (res.code === '200') {\n          console.log(res);\n          //let chartDom = document.getElementById('bar');\n          const chartDom = this.$refs.chartContainer;\n          if (!chartDom) {\n            console.error(\"Chart container is not available\");\n            return;\n          }\n          let myChart = echarts.init(chartDom);\n          barOptions.title.text = res.data.text;\n          barOptions.title.subtext = res.data.subText;\n          barOptions.xAxis.data = res.data.xAxis;\n          barOptions.series[0].data = res.data.yAxis;\n          myChart.setOption(barOptions);\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["echarts","barOptions","title","text","subtext","left","xAxis","type","data","yAxis","minInterval","tooltip","trigger","series","itemStyle","normal","color","Math","floor","random","toString","name","authorId","$route","query","id","tableData","pro","pageNum","pageSize","total","journal","author","menuVisible","menu","user","JSON","parse","localStorage","getItem","pageNum1","pageSize1","total1","options","created","loadPro","load","mounted","loadBar","methods","addMyMenu","console","log","$request","get","params","articleId","cId","then","res","code","$message","success","error","msg","loadleftmenu","userId","categoryList","col","startDate","i","list","length","dateTimeString","time","dateTime","Date","year","getFullYear","month","getMonth","day","getDate","setTimeout","chartDom","$refs","chartContainer","myChart","init","subText","setOption"],"sources":["src/views/front/Professor.vue"],"sourcesContent":["<template>\r\n    <div class=\"main-content\">\r\n        <div style=\"display: flex; grid-gap:10px\">\r\n            <div style=\"flex:1; width:150px\" class=\"card\">\r\n                <div style=\"height:200px\" class=\"search\">\r\n                    <div class=\"left\">\r\n                        <div style=\"margin: 15px; text-align: center\">\r\n                            <el-image :src=\"pro.avatar\" style=\"width: 150px; height: auto;\"></el-image>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"right\">\r\n                        <div class=\"custom-text\">{{ pro.name }}</div>\r\n                        <div>{{ pro.username }}</div>\r\n                        <div>{{ pro.email }}</div>\r\n                        <div>{{ pro.phone }}</div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"table\">\r\n                    <el-table :data=\"tableData\">\r\n                        <el-table-column prop=\"id\" label=\"序号\" width=\"80\" align=\"center\" sortable></el-table-column>\r\n                        <el-table-column prop=\"img\" label=\"文献封面\" show-overflow-tooltip>\r\n                            <template v-slot=\"scope\">\r\n                                <div style=\"display: flex; align-items: center\">\r\n                                    <el-image style=\"width: 60px; height: 40px; border-radius: 10px\"\r\n                                        v-if=\"scope.row.img\" :src=\"scope.row.img\"\r\n                                        :preview-src-list=\"[scope.row.img]\"></el-image>\r\n                                </div>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"name\" label=\"文献名称\" show-overflow-tooltip width=\"300\">\r\n                            <template v-slot=\"scope\">\r\n                                <a :href=\"'/front/articleDetail?id=' + scope.row.id\">{{ scope.row.name }}</a>\r\n                            </template>\r\n                        </el-table-column>\r\n\r\n                        <el-table-column prop=\"author\" label=\"文献作者\" show-overflow-tooltip></el-table-column>\r\n                        <el-table-column prop=\"content\" label=\"综述\" show-overflow-tooltip></el-table-column>\r\n                        <el-table-column prop=\"type\" label=\"文献类别\">\r\n                            <template v-slot=\"scope\">\r\n                                <span v-if=\"scope.row.type === 'CHINESE'\" style=\"color: #b67259\">中文 </span>\r\n                                <span v-else style=\"color: #448231\">英文</span>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"price\" label=\"所属积分\">\r\n                            <template v-slot=\"scope\">\r\n                                <span style=\"color: #12b127; font-size: 15px\" v-if=\"scope.row.price > 0\">{{\r\n                                    scope.row.price }} 积分</span>\r\n                                <span v-else style=\"color: green\">公开资料</span>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <!-- <el-table-column prop=\"file\" label=\"文献链接\" show-overflow-tooltip>\r\n                            <template v-slot=\"scope\">\r\n                                <el-button type=\"warning\" size=\"mini\" @click=\"down(scope.row.file)\">点击下载</el-button>\r\n                            </template> -->\r\n                        <!-- </el-table-column> -->\r\n                        <el-table-column prop=\"discount\" label=\"文献折扣\">\r\n                            <template v-slot=\"scope\">\r\n                                <span style=\"color: #448231\" v-if=\"scope.row.discount < 1\">{{ scope.row.discount * 10 }}\r\n                                    折</span>\r\n                                <span style=\"color: #448231\" v-else>——</span>\r\n                            </template>\r\n                        </el-table-column>\r\n                        <!-- <el-table-column prop=\"file\" label=\"文献资料\" show-overflow-tooltip></el-table-column> -->\r\n                        <!-- <el-table-column prop=\"discount\" label=\"文献折扣\"></el-table-column> -->\r\n                        <el-table-column prop=\"reference\" label=\"文献引用量\"></el-table-column>\r\n                        <el-table-column prop=\"time\" label=\"发表时间\"></el-table-column>\r\n                        <el-table-column label=\"引用\" width=\"180\" align=\"center\">\r\n                            <template v-slot=\"scope\">\r\n                                <!-- <el-button plain type=\"primary\" @click=\"handleRef(scope.row.id)\"\r\n                                    size=\"mini\">引用</el-button> -->\r\n                                <el-button plain type=\"danger\" size=\"mini\" @click=col(scope.row.id)>收藏</el-button>\r\n                            </template>\r\n                        </el-table-column>\r\n                    </el-table>\r\n\r\n                    <div class=\"pagination\">\r\n                        <el-pagination background @current-change=\"handleCurrentChange\" :current-page=\"pageNum\"\r\n                            :page-sizes=\"[5, 10, 20]\" :page-size=\"pageSize\" layout=\"total, prev, pager, next\"\r\n                            :total=\"total\">\r\n                        </el-pagination>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div style=\"width:500px\" class=\"card\">\r\n                <div ref=\"chartContainer\" style=\"width: 100%; height: 400px\" id=\"bar\"></div>\r\n            </div>\r\n            <el-dialog title=\"文献收藏\" :visible.sync=\"menuVisible\" width=\"55%\" :close-on-click-modal=\"false\"\r\n                destroy-on-close>\r\n                <el-form label-width=\"100px\" style=\"padding-right: 50px\" :model=\"menu\">\r\n                    <el-select v-model=\"menu.name\" placeholder=\"请选择\">\r\n                        <el-option v-for=\"item in options\" :key=\"item.id\" :label=\"item.name\" :value=\"item.name\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </el-form>\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"addMyMenu\">确 定</el-button>\r\n                </div>\r\n            </el-dialog>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nlet barOptions = {\r\n    title: {\r\n        text: '', // 主标题\r\n        subtext: '', // 副标题\r\n        left: 'center'\r\n    },\r\n    xAxis: {\r\n        type: 'category',\r\n        data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'] // 示例数据：统计的维度（横坐标）\r\n    },\r\n    yAxis: {\r\n        type: 'value',\r\n        minInterval: 1\r\n    },\r\n    tooltip: {\r\n        trigger: 'item'\r\n    },\r\n    series: [\r\n        {\r\n            data: [120, 200, 150, 80, 70, 110, 130], // 示例数据：横坐标维度对应的值（纵坐标）\r\n            type: 'bar',\r\n            itemStyle: {\r\n                normal: {\r\n                    color: function () { return \"#\" + Math.floor(Math.random() * (256 * 256 * 256 - 1)).toString(16); }\r\n                },\r\n            },\r\n        }\r\n    ]\r\n}\r\nexport default {\r\n\r\n    name: \"Professor\",\r\n    data() {\r\n        let authorId = this.$route.query.id\r\n        return {\r\n            tableData: [],  // 所有的数据\r\n            pro: null,\r\n            pageNum: 1,   // 当前的页码\r\n            pageSize: 8,  // 每页显示的个数\r\n            total: 0,\r\n            name: null,\r\n            journal: null,\r\n            author: null,\r\n            authorId: authorId,\r\n            menuVisible:null,\r\n            menu:{},\r\n            type: null,\r\n            user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n            pageNum1: 1,   // 当前的页码\r\n            pageSize1: 8,\r\n            total1: 0,\r\n            options: [],\r\n        }\r\n    },\r\n    created() {\r\n        this.loadPro();\r\n        this.load(1);\r\n    },\r\n    mounted() {\r\n        this.loadBar();\r\n        //this.loadPro();\r\n        // this.load(1);\r\n        //this.loadBar();\r\n    },\r\n\r\n    methods: {\r\n        addMyMenu(){\r\n            console.log(this.menu.name);\r\n             this.$request.get('/Userarticle/add/', {\r\n                params: {\r\n                    articleId: this.articleId,\r\n                    cId: this.user.id,\r\n                    name:this.menu.name,\r\n                }\r\n            }).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success('添加成功')\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n            this.menuVisible=false\r\n        },\r\n        loadleftmenu() {\r\n            this.$request.get(\"/menu/selectAll\", {\r\n                params: {\r\n                    userId: this.user.id\r\n                }\r\n            }).then(res => {\r\n                console.log(res);\r\n                this.categoryList = res.data;\r\n                this.options = res.data;\r\n                //this.categoryList.unshift({ name: '全部文献' })\r\n            })\r\n        },\r\n        col(id) {\r\n            this.menuVisible = true;\r\n            this.loadleftmenu();\r\n            this.articleId=id;\r\n        },\r\n        load(pageNum) {\r\n            if (pageNum) this.pageNum = pageNum;\r\n            console.log(this.startDate);\r\n            this.$request.get('/article/selectArticle', {\r\n                params: {\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                    authorId: this.authorId,\r\n                }\r\n            }).then(res => {\r\n                console.log(res);\r\n                for (var i = 0; i < res.data.list.length; i++) {\r\n\r\n                    var dateTimeString = res.data.list[i].time;\r\n                    var dateTime = new Date(dateTimeString);\r\n                    var year = dateTime.getFullYear();\r\n                    var month = dateTime.getMonth() + 1; // 注意：月份从 0 开始，所以要加 1\r\n                    var day = dateTime.getDate();\r\n                    res.data.list[i].time = year + '-' + (month < 10 ? '0' : '') + month + '-' + (day < 10 ? '0' : '') + day;\r\n                }\r\n                this.tableData = res.data?.list\r\n                this.total = res.data?.total\r\n            })\r\n            //this.loadBar();\r\n        },\r\n        loadPro() {\r\n            this.$request.get('/user/selectById/' + this.authorId).then(res => {\r\n                if (res.code === '200') {\r\n                    this.pro = res.data;\r\n                    console.log(this.pro);\r\n                } else {\r\n                    this.$message.error(res.msg);\r\n                }\r\n            }\r\n            )\r\n\r\n        },\r\n\r\n        loadBar() {\r\n            this.$request.get('/bycited/getProBar', {\r\n                params: {\r\n                    id: this.authorId\r\n                }\r\n            }).then(res => {\r\n                setTimeout(() => {\r\n                    console.log(\"500毫秒后执行的操作\");\r\n                }, 1000); // 500毫秒\r\n                if (res.code === '200') {\r\n                    console.log(res);\r\n                    //let chartDom = document.getElementById('bar');\r\n                    const chartDom = this.$refs.chartContainer;\r\n                    if (!chartDom) {\r\n                        console.error(\"Chart container is not available\");\r\n                        return;\r\n                    }\r\n                    let myChart = echarts.init(chartDom);\r\n                    barOptions.title.text = res.data.text\r\n                    barOptions.title.subtext = res.data.subText\r\n                    barOptions.xAxis.data = res.data.xAxis\r\n                    barOptions.series[0].data = res.data.yAxis;\r\n                    myChart.setOption(barOptions);\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n        },\r\n    }\r\n}\r\n</script>\r\n<style>\r\n.category-item {\r\n    text-align: center;\r\n    padding: 10px 0;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n}\r\n\r\n.category-item-active {\r\n    background-color: #1890ff;\r\n    color: #fff;\r\n    border-radius: 5px;\r\n}\r\n\r\n.search {\r\n    display: flex;\r\n}\r\n\r\n.left {\r\n    flex: 1;\r\n    /* 左侧块会占据剩余空间 */\r\n    /* background-color: lightblue; */\r\n}\r\n\r\n.right {\r\n    flex: 1;\r\n    /* 右侧块会占据剩余空间 */\r\n    /* background-color: lightgreen; */\r\n}\r\n\r\n.custom-text {\r\n    font-size: 50px;\r\n    /* 设置文字大小为 16 像素 */\r\n}\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}